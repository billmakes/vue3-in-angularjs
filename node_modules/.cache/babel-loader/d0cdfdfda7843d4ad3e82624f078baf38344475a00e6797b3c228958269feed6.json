{"ast":null,"code":"import _classCallCheck from \"/home/bill/tmp/vang/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/bill/tmp/vang/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n/* eslint-env es6 */\n/* eslint-disable no-console */\nvar AngularComponent = {\n  template: \"\\n  <h1>AngularJs + Vue + Event</h1>\\n  This demo shows how to insert Vue component inside AngularJs just as you write Vue syntax.\\n\\n  <h3 class=\\\"ng-logo\\\" style=\\\"background-size:contain\\\">I'm angular main component</h3>\\n\\n  <li>scopeVar: {{scopeVar|json}}\\n  <li>$ctrl.ctrlVar: {{$ctrl.ctrlVar}}\\n  <li>$ctrl.hello: {{$ctrl.hello|json}}\\n\\n  <p>\\n  'ng-vue' is an AngularJs directive. It loads a Vue component by finding a Vue component name from it's element name. The syntax difference between AngularJs and Vue is just 'ng-vue attribute.\\n  </p>\\n\\n  <pre>\\n  &lt;<b>MyVueComponent</b> <b>ng-vue</b>\\n    <u>foo</u>=\\\"scopeVar\\\" \\n    <u>bar</u>=\\\"$ctrl.ctrlVar\\\"\\n    <u>foo-bar</u>=\\\"'MY FOOBAR'\\\" \\n    <u>baz</u>=\\\"'MY BAZ'\\\"\\n    <u>ng-click</u>=\\\"$ctrl.alert($event)\\\"\\n    <u>v-on:my-event</u>=\\\"$ctrl.handleEvent($event)\\\">&lt;/<b>MyVueComponent</b>>\\n  </pre>\\n\\n  message: {{$ctrl.message | json}}\\n  <MyVueComponent ng-vue \\n    foo=\\\"scopeVar\\\" \\n    bar=\\\"$ctrl.ctrlVar\\\"\\n    foo-bar=\\\"'MY FOOBAR'\\\" \\n    baz=\\\"'MY BAZ'\\\"\\n    ng-click=\\\"$ctrl.alert($event)\\\"\\n    v-on:my-event=\\\"$ctrl.handleEvent($event)\\\">\\n  </MyVueComponent>\\n\\n  <pre>\\n   &lt;<b>MyOtherVueComponent ng-vue</b> hello=\\\"$ctrl.hello\\\">\\n   &lt;/<b>MyOtherVueComponent</b>></pre>\\n\\n  <MyOtherVueComponent ng-vue hello=\\\"$ctrl.hello\\\">\\n  </MyOtherVueComponent>\\n    \",\n  controller: /*#__PURE__*/function () {\n    function controller($scope) {\n      _classCallCheck(this, controller);\n      $scope.scopeVar = {\n        scope: 'var'\n      };\n      this.$scope = $scope;\n    }\n    _createClass(controller, [{\n      key: \"$onInit\",\n      value: function $onInit() {\n        this.ctrlVar = ['ctrl', 'var'];\n        this.hello = 'Vue Inside Angular';\n        this.message = 'This message is from AngularJs';\n      }\n    }, {\n      key: \"handleEvent\",\n      value: function handleEvent(event) {\n        this.message = event;\n        this.$scope.$apply();\n      }\n    }, {\n      key: \"alert\",\n      value: function (_alert) {\n        function alert(_x) {\n          return _alert.apply(this, arguments);\n        }\n        alert.toString = function () {\n          return _alert.toString();\n        };\n        return alert;\n      }(function (event) {\n        alert(event);\n        console.log({\n          event: event\n        });\n      })\n    }]);\n    return controller;\n  }()\n};\nexport default AngularComponent;","map":{"version":3,"names":["AngularComponent","template","controller","$scope","scopeVar","scope","ctrlVar","hello","message","event","$apply","alert","console","log"],"sources":["/home/bill/tmp/vang/src/angular-component.js"],"sourcesContent":["/* eslint-env es6 */\n/* eslint-disable no-console */\nconst AngularComponent = {\n  template: `\n  <h1>AngularJs + Vue + Event</h1>\n  This demo shows how to insert Vue component inside AngularJs just as you write Vue syntax.\n\n  <h3 class=\"ng-logo\" style=\"background-size:contain\">I'm angular main component</h3>\n\n  <li>scopeVar: {{scopeVar|json}}\n  <li>$ctrl.ctrlVar: {{$ctrl.ctrlVar}}\n  <li>$ctrl.hello: {{$ctrl.hello|json}}\n\n  <p>\n  'ng-vue' is an AngularJs directive. It loads a Vue component by finding a Vue component name from it's element name. The syntax difference between AngularJs and Vue is just 'ng-vue attribute.\n  </p>\n\n  <pre>\n  &lt;<b>MyVueComponent</b> <b>ng-vue</b>\n    <u>foo</u>=\"scopeVar\" \n    <u>bar</u>=\"$ctrl.ctrlVar\"\n    <u>foo-bar</u>=\"'MY FOOBAR'\" \n    <u>baz</u>=\"'MY BAZ'\"\n    <u>ng-click</u>=\"$ctrl.alert($event)\"\n    <u>v-on:my-event</u>=\"$ctrl.handleEvent($event)\">&lt;/<b>MyVueComponent</b>>\n  </pre>\n\n  message: {{$ctrl.message | json}}\n  <MyVueComponent ng-vue \n    foo=\"scopeVar\" \n    bar=\"$ctrl.ctrlVar\"\n    foo-bar=\"'MY FOOBAR'\" \n    baz=\"'MY BAZ'\"\n    ng-click=\"$ctrl.alert($event)\"\n    v-on:my-event=\"$ctrl.handleEvent($event)\">\n  </MyVueComponent>\n\n  <pre>\n   &lt;<b>MyOtherVueComponent ng-vue</b> hello=\"$ctrl.hello\">\n   &lt;/<b>MyOtherVueComponent</b>></pre>\n\n  <MyOtherVueComponent ng-vue hello=\"$ctrl.hello\">\n  </MyOtherVueComponent>\n    `,\n\n  controller: class {\n    constructor($scope) {\n      $scope.scopeVar = { scope: 'var' };\n      this.$scope = $scope;\n    }\n    $onInit() {\n      this.ctrlVar = ['ctrl', 'var'];\n      this.hello = 'Vue Inside Angular';\n      this.message = 'This message is from AngularJs';\n    }\n    handleEvent(event) {\n      this.message = event;\n      this.$scope.$apply();\n    }\n    alert(event) {\n      alert(event);\n      console.log({ event });\n    }\n  }\n};\n\nexport default AngularComponent;\n"],"mappings":";;;;;;AAAA;AACA;AACA,IAAMA,gBAAgB,GAAG;EACvBC,QAAQ,o1CAwCL;EAEHC,UAAU;IACR,oBAAYC,MAAM,EAAE;MAAA;MAClBA,MAAM,CAACC,QAAQ,GAAG;QAAEC,KAAK,EAAE;MAAM,CAAC;MAClC,IAAI,CAACF,MAAM,GAAGA,MAAM;IACtB;IAAC;MAAA;MAAA,OACD,mBAAU;QACR,IAAI,CAACG,OAAO,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC;QAC9B,IAAI,CAACC,KAAK,GAAG,oBAAoB;QACjC,IAAI,CAACC,OAAO,GAAG,gCAAgC;MACjD;IAAC;MAAA;MAAA,OACD,qBAAYC,KAAK,EAAE;QACjB,IAAI,CAACD,OAAO,GAAGC,KAAK;QACpB,IAAI,CAACN,MAAM,CAACO,MAAM,EAAE;MACtB;IAAC;MAAA;MAAA;QAAA;UAAA;QAAA;QAAA;UAAA;QAAA;QAAA;MAAA,EACD,UAAMD,KAAK,EAAE;QACXE,KAAK,CAACF,KAAK,CAAC;QACZG,OAAO,CAACC,GAAG,CAAC;UAAEJ,KAAK,EAALA;QAAM,CAAC,CAAC;MACxB,CAAC;IAAA;IAAA;EAAA;AAEL,CAAC;AAED,eAAeT,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}